name: "Release drafter"

on:
  push:
    branches:
      - main
    paths:
      # - "docs/**"
      - ".github/workflows/release.yaml"
      - "kubernetes/**"
      - "src/**"
  pull_request:
    branches:
      - main
    paths:
      # - "docs/**"
      - ".github/workflows/release.yaml"
      - "kubernetes/**"
      - "src/**"

jobs:
  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
  #         repository: danielvincenzi/${{ github.event.repository.name }}
  #         tags: ${{ github.sha }}, latest
  update_release_draft:
    name: Release drafter
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        id: update_release_draft
        with:
          # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
          # config-name: my-config.yml
          publish: false
          prerelease: false
          config-name: release-drafter.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # outputs:
    #   tag_name: ${{ steps.update_release_draft.outputs.tag_name }}

  # build:
  #   name: Build Docker image
  #   runs-on: ubuntu-latest
  #   needs:
  #     - update_release_draft
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
        
  #     - name: AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-region: us-east-1
  #         # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  #         role-session-name: letsrockthefuture

  #     - name: Login to Amazon ECR
  #       id: login_ecr
  #       uses: aws-actions/amazon-ecr-login@v1

  #     - name: Build, tag, and push image to Amazon ECR
  #       env:
  #         ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
  #         ECR_REPOSITORY: ${{ github.event.repository.name }}
  #         # IMAGE_TAG: ${{ github.sha }}
  #         IMAGE_TAG: ${{ needs.update_release_draft.outputs.tag_name }}
  #       working-directory: "src/"
  #       run: |
  #         docker build -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} .
  #         docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}

  # sync:
  #   name: Trigger ArgoCD sync
  #   runs-on: ubuntu-latest
  #   needs:
  #     - update_release_draft
  #     - build
  #   env:
  #     REPOSITORY_NAME: ${{ github.event.repository.name }}
  #     IMAGE_TAG: ${{ needs.update_release_draft.outputs.tag_name }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Set up Kustomize
  #       uses: imranismail/setup-kustomize@v1

  #     - name: Update manifests to new version
  #       working-directory: "kubernetes/kustomize/"
  #       run: |
  #         kustomize edit set image ${REPOSITORY_NAME}=260712519057.dkr.ecr.us-east-1.amazonaws.com/${REPOSITORY_NAME}:${IMAGE_TAG}

  #     - name: Commit changes
  #       run: |
  #         git config --local user.name 'letsrockthefuturebot'
  #         git add .
  #         git commit -m "Trigger ArgoCD sync with ${IMAGE_TAG}"

  #     - name: Push changes
  #       uses: ad-m/github-push-action@master
