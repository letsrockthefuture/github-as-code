name: Terraform

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/terraform.yaml"
      - "terraform/**"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/terraform.yaml"
      - "terraform/**"

jobs:
  checkov:
    name: Static code analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Run Checkov"
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          framework: terraform
          directory: terraform
          skip_check: CKV_GIT_1

  plan:
    name: Plan
    runs-on: ubuntu-latest
    needs:
      - checkov
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up credentials
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}

      - name: Plan
        id: terraform_plan
        # if: github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          make init
          make terraform/plan

      - name: Plan status
        if: steps.terraform_plan.outcome == 'failure'
        run: |
          exit 1

      - name: Update pull request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          TERRAFORM_PLAN: "terraform\n${{ steps.terraform_plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform plan ðŸ“–: \`${{ steps.terraform_plan.outcome }}\`

            <details><summary>Show plan</summary>

            \`\`\`\n
            ${process.env.TERRAFORM_PLAN}
            \`\`\`

            </details>

            *Actor: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.working-directory }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  apply:
    name: Apply
    runs-on: ubuntu-latest
    needs:
      - plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up credentials
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}

      - name: Apply
        run: |
          make init
          make terraform/apply
